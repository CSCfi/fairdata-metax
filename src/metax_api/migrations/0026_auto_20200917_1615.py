# Generated by Django 3.0.7 on 2020-09-17 12:04

import logging

from django.db import migrations

_logger = logging.getLogger(__name__)

def change_emails(apps, schema_editor):
    import json
    CatalogRecord = apps.get_model('metax_api', 'CatalogRecord')

    for cr in CatalogRecord.objects.all():
        owner = json.loads(json.dumps(cr.metadata_owner_org))
        provider = json.loads(json.dumps(cr.metadata_provider_org))

        cr_changed = False

        owner_data = ''
        prov_data = ''
        if owner:
            if 'tut.fi' in owner:
                owner_data = owner.replace("tut.fi", "tuni.fi")
                cr_changed = True
            elif 'uta.fi' in owner:
                owner_data = owner.replace("uta.fi", "tuni.fi")
                cr_changed = True
        if provider:
            if 'tut.fi' in provider:
                prov_data = provider.replace("tut.fi", "tuni.fi")
                cr_changed = True
            elif 'uta.fi' in provider:
                prov_data = provider.replace("uta.fi", "tuni.fi")
                cr_changed = True

        if cr_changed:
            cr.metadata_owner_org = owner_data
            cr.metadata_provider_org = prov_data
            cr.save()

        # Change actor emails in research dataset
        research_dataset_changed = False

        dataset = json.loads(json.dumps(cr.research_dataset))

        roles = ['curator', 'creator', 'contributor', 'publisher', 'rights_holder']

        for role in roles:
            if role in dataset:
                for actor in dataset[role]:
                    email = ''
                    if isinstance(actor, str):
                        if 'email' in dataset[role].keys():
                            email = dataset[role]['email']
                    if isinstance(actor, dict):
                        if 'email' in actor.keys():
                            email = actor['email']
                    
                    changed = False
                    if 'tut.fi' in email:
                        email = email.replace("tut.fi", "tuni.fi")
                        changed = True
                    elif 'uta.fi' in email:
                        email = email.replace("uta.fi", "tuni.fi")
                        changed = True

                    if changed:
                        research_dataset_changed = True
                        if isinstance(actor, str):
                            dataset[role]['email'] = email
                        else:
                            actor['email'] = email
        if research_dataset_changed:
            cr.research_dataset = dataset
            cr.save()


def revert(apps, schema_editor): 
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('metax_api', '0025_auto_20200811_1050'),
    ]

    operations = [
        migrations.RunPython(change_emails, revert),
    ]