# Generated by Django 3.1.2 on 2020-10-28 14:02

from django.db import migrations, connection
import csv
import json
import logging
from django.utils import timezone


logger = logging.getLogger(__name__)

def remove(apps, schema_editor):
    CatalogRecord = apps.get_model('metax_api', 'CatalogRecord')

    syke_objs = CatalogRecord.objects \
        .filter(data_catalog__catalog_json__identifier='urn:nbn:fi:att:data-catalog-harvest-syke',
        research_dataset__other_identifier__0__notation='') \
        .exclude(research_dataset__other_identifier__0__old_notation='')

    for cr in syke_objs:
        try:
            cr.user_modified = "migration_0029"
            delete_d(cr)
            logger.info(f'successful migration of cr {cr.id}')
        except CatalogRecord.DoesNotExist:
            pass

def revert(apps, schema_editor):
    CatalogRecord = apps.get_model('metax_api', 'CatalogRecord')
    modified = CatalogRecord.objects.filter(user_modified="migration_0029")
    for cr in modified:
        try:
            save_s(cr)
        except CatalogRecord.DoesNotExist:
            pass

def get_tz_aware_now_without_micros():
    return timezone.now().replace(microsecond=0)

def delete_d(cr):
    cr.removed = True
    cr.date_removed = cr.date_modified = get_tz_aware_now_without_micros()
    cr.save(update_fields=['removed', 'date_removed', 'date_modified'])

def save_s(cr):
    cr.removed = False
    cr.date_removed = None
    cr.date_modified = get_tz_aware_now_without_micros()
    cr.save(update_fields=['removed', 'date_removed', 'date_modified'])


class Migration(migrations.Migration):

    dependencies = [
        ('metax_api', '0028_auto_20201020_1010'),
    ]

    operations = [
        migrations.RunPython(remove, revert),
    ]
