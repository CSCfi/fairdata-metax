# Generated by Django 3.1.2 on 2020-12-22 11:21

from django.db import migrations
from django.forms.models import model_to_dict
import logging
import json

_logger = logging.getLogger(__name__)

datasets = [
    '37b7ca16-b421-4064-804d-013efd69d02b', # OKM TEST!! dataset
    'a0651f93-1826-4264-8fe4-df39f1ee72ac' # OKM dataset
    '340393d9-c13f-4806-b492-d6d06bbb966a', # Kotus TEST!! dataset
    '234568cc-a5cb-45cc-8b51-c7828ceb3a46', # Kotus
    '3746a761-b492-4b33-aa87-5a5a364fe877', # Kotus
    'e69340f2-6f55-4097-8299-5e7c3f8344b0', # Kotus
    'b1014ce6-6b8b-4343-b95b-478d30c184c4' # Kotus
]


def add_version_set_field_to_rd(apps, schema_editor):
    CatalogRecord = apps.get_model('metax_api', 'CatalogRecord')

    for data in CatalogRecord.objects.filter(identifier__in=datasets):
        cr = model_to_dict(data)

        if 'data_catalog' in cr:
            cr['data_catalog'] = 1

        if 'dataset_version_set' not in cr:
            cr['dataset_version_set'] = [{}]

        data.save()

def revert(apps, schema_editor):
    CatalogRecord = apps.get_model('metax_api', 'CatalogRecord')

    for data in CatalogRecord.objects.filter(identifier__in=datasets):
        cr = model_to_dict(data)

        if 'data_catalog' in cr:
            cr['data_catalog'] = 2

        if 'dataset_version_set' in cr:
            cr.pop('dataset_version_set', None)

        data.save()

class Migration(migrations.Migration):
    dependencies = [
        ('metax_api', '0031_merge_20201207_1117'),
    ]

    operations = [
        migrations.RunPython(add_version_set_field_to_rd, revert),
    ]
