# Generated by Django 3.1.2 on 2020-12-22 11:21

from django.db import migrations
import logging
import json
_logger = logging.getLogger(__name__)

datasets = [
    '71f0fe7a-bfca-41c3-b9f1-9493f1c4fda9', # Testdata (metax-test)
    'c7f1cc41-82eb-4ab8-8e1b-7d30582a50fe', # Testdata (metax-test)
    'a0651f93-1826-4264-8fe4-df39f1ee72ac', # OKM dataset
    '234568cc-a5cb-45cc-8b51-c7828ceb3a46', # Kotus
    '3746a761-b492-4b33-aa87-5a5a364fe877', # Kotus
    'e69340f2-6f55-4097-8299-5e7c3f8344b0', # Kotus
    'b1014ce6-6b8b-4343-b95b-478d30c184c4', # Kotus
]

def add_version_set_field_to_rd(apps, schema_editor):
    CatalogRecord = apps.get_model('metax_api', 'CatalogRecord')
    DataCatalog = apps.get_model('metax_api', 'DataCatalog')
    DatasetVersionSet = apps.get_model('metax_api', 'DatasetVersionSet')

    for cr in CatalogRecord.objects.filter(identifier__in=datasets):

        ida = 'urn:nbn:fi:att:data-catalog-ida'
        dc = DataCatalog.objects.get(catalog_json__identifier = ida)
        cr.data_catalog_id = dc.id

        dvs = DatasetVersionSet()
        dvs.save()
        dvs.records.add(cr)

        cr.save()
        _logger.info(f'successfully migrated cr {cr.identifier}')

def revert(apps, schema_editor):
    CatalogRecord = apps.get_model('metax_api', 'CatalogRecord')
    DataCatalog = apps.get_model('metax_api', 'DataCatalog')

    for cr in CatalogRecord.objects.filter(identifier__in=datasets):

        att = 'urn:nbn:fi:att:data-catalog-att'
        dc = DataCatalog.objects.get(catalog_json__identifier = att)
        cr.data_catalog_id = dc.id

        cr.dataset_version_set_id = None

        cr.save()
        _logger.info(f'successfully reverted migration of cr {cr.identifier}')


class Migration(migrations.Migration):
    dependencies = [
        ('metax_api', '0031_merge_20201207_1117'),
    ]

    operations = [
        migrations.RunPython(add_version_set_field_to_rd, revert),
    ]
