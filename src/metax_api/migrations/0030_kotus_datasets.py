# Generated by Django 3.0.7 on 2020-09-17 12:04

from django.db import migrations
import logging
import json

_logger = logging.getLogger(__name__)

# It√§merensuomalainen kielikartasto
# https://etsin.fairdata.fi/dataset/234568cc-a5cb-45cc-8b51-c7828ceb3a46
# Paikannimikartasto
# https://etsin.fairdata.fi/dataset/3746a761-b492-4b33-aa87-5a5a364fe877
# Svenska Ortnamn
# https://etsin.fairdata.fi/dataset/43f2c49a-1d27-4db5-be61-9c29dc6ff33e
# Suomen murteiden sanakirjan levikkikartat
# https://etsin.fairdata.fi/dataset/e69340f2-6f55-4097-8299-5e7c3f8344b0
# Kettusen murrekartasto
# https://etsin.fairdata.fi/dataset/b1014ce6-6b8b-4343-b95b-478d30c184c4

# Changes:

# metadata_owner_org arvoksi: kotus.fi
# metadata_provider_org arvoksi: kotus.fi
# metadata_provider_user arvoksi: puuraulr

datasets = [
    '234568cc-a5cb-45cc-8b51-c7828ceb3a46',
    '3746a761-b492-4b33-aa87-5a5a364fe877',
    '43f2c49a-1d27-4db5-be61-9c29dc6ff33e',
    'e69340f2-6f55-4097-8299-5e7c3f8344b0',
    'b1014ce6-6b8b-4343-b95b-478d30c184c4'
]

def change_metadata_ownership(apps, schema_editor):
    CatalogRecord = apps.get_model('metax_api', 'CatalogRecord')

    for cr in CatalogRecord.objects.filter(identifier__in=datasets):
        owner_org = json.loads(json.dumps(cr.metadata_owner_org))
        provider_org = json.loads(json.dumps(cr.metadata_provider_org))
        provider_usr = json.loads(json.dumps(cr.metadata_provider_user))

        cr_changed = False

        owner_data = ''
        prov_data = ''
        prov_user_data = ''

        if owner_org:
            if 'helsinki.fi' in owner_org:
                owner_data = owner_org.replace("helsinki.fi", "kotus.fi")
                cr_changed = True
        if provider_org:
            if 'helsinki.fi' in provider_org:
                prov_data = provider_org.replace("helsinki.fi", "kotus.fi")
                cr_changed = True
        if provider_usr:
            if 'pkolari' in provider_usr:
                prov_user_data = provider_usr.replace("pkolari", "puuraulr")
                cr_changed = True

        if cr_changed:
            cr.metadata_owner_org = owner_data
            cr.metadata_provider_org = prov_data
            cr.metadata_provider_user = prov_user_data
            _logger.info(f'successful migration of cr {cr.id}')
            cr.save()

def revert(apps, schema_editor):
    CatalogRecord = apps.get_model('metax_api', 'CatalogRecord')

    for cr in CatalogRecord.objects.filter(identifier__in=datasets):
        owner_org = json.loads(json.dumps(cr.metadata_owner_org))
        provider_org = json.loads(json.dumps(cr.metadata_provider_org))
        provider_usr = json.loads(json.dumps(cr.metadata_provider_user))

        cr_changed = False

        owner_data = ''
        prov_data = ''
        prov_user_data = ''

        if owner_org:
            if 'kotus.fi' in owner_org:
                owner_data = owner_org.replace("kotus.fi", "helsinki.fi")
                cr_changed = True
        if provider_org:
            if 'kotus.fi' in provider_org:
                prov_data = provider_org.replace("kotus.fi", "helsinki.fi")
                cr_changed = True
        if provider_usr:
            if 'puuraulr' in provider_usr:
                prov_user_data = provider_usr.replace("puuraulr", "pkolari")
                cr_changed = True

        if cr_changed:
            cr.metadata_owner_org = owner_data
            cr.metadata_provider_org = prov_data
            cr.metadata_provider_user = prov_user_data
            _logger.info(f'successfully reverted migration of cr {cr.id}')
            cr.save()


class Migration(migrations.Migration):

    dependencies = [
        ('metax_api', '0029_auto_20201028_1602'),
    ]

    operations = [
        migrations.RunPython(change_metadata_ownership, revert),
    ]
