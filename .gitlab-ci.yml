---
variables:
  GITLAB_ENV: test
  SERVICE: ${SERVICE}

default:
  tags:
    - shell

stages:
  - deploy
  - update
  - test
  - e2e-test

include:
  - project: fairdata/fairdata-ci
    ref: master
    file:
      - /templates/deploy/deploy-jobs.yml
      - /templates/test/test-jobs.yml

# ------------------------

deploy:
  extends: .deploy-job
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
    - if: $CI_PIPELINE_SOURCE =~ /^(web)$/

deploy-feature:
  extends: .deploy-feature-job
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

update-proxy:
  stage: update
  environment: $GITLAB_ENV
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $UPDATE_PROXY_PLAYBOOK --vault-id $ANSIBLE_VAULT_FILE
    - ansible-playbook -i $ANSIBLE_INVENTORY $MANAGE_PLAYBOOK --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
    - if: $CI_PIPELINE_SOURCE =~ /^(web)$/

update-proxy-feature:
  stage: update
  environment: staging
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $UPDATE_PROXY_PLAYBOOK --vault-id $ANSIBLE_VAULT_FILE
    - ansible-playbook -i $ANSIBLE_INVENTORY $MANAGE_PLAYBOOK --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# ------------------------

integration-test-docker:
  stage: test
  tags:
    - docker
  image:
    name: python:3.8
  interruptible: true
  services:
    - postgres:9.6
    - rabbitmq:3
    - redis:latest
    - name: elasticsearch:7.9.2
      alias: elasticsearch
      command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]
  variables:
    POSTGRES_USER: metax_user
    POSTGRES_PASSWORD: password
    POSTGRES_DB: metax_db
    METAX_DATABASE: metax_db
    METAX_DATABASE_PASSWORD: password
    METAX_DATABASE_USER: metax_user
    METAX_DATABASE_HOST: postgres
    ELASTIC_SEARCH_HOSTS: elasticsearch
    RABBIT_MQ_HOSTS: rabbitmq
    REDIS_HOST: redis
    REDIS_PORT: 6379
    DJANGO_SECRET_KEY: django-insecure-22388&4#2_#u0e%$%!)5vo3mpys)#f7@vsk9az354!jgze--&e
    DJANGO_ENV: unittests
  script:
    - apt-get update && apt-get install -y xqilla libxerces-c-dev build-essential libssl-dev libffi-dev python-dev libxqilla-dev
    - mkdir -p /var/log/metax-api/errors
    - pip install -r requirements.txt
    - cd src
    - python manage.py first_time_setup
    - coverage run manage.py test --parallel
    - coverage combine
    - coverage report -m
    - coverage xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: src/coverage.xml
    paths:
      - src/coverage.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

integration-test:
  stage: test
  environment: $GITLAB_ENV
  needs: [update-proxy]
  script:
    - ansible-playbook -i $ANSIBLE_INVENTORY $TEST_PLAYBOOK --vault-id $ANSIBLE_VAULT_FILE
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
    - if: $CI_PIPELINE_SOURCE =~ /^(web)$/

sonarqube:
  extends: .sonarqube-job
  needs:
    - job: integration-test-docker
      artifacts: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

fairdata-e2e:
  stage: e2e-test
  trigger: fairdata/fairdata-ci
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master)$/
    - if: $CI_PIPELINE_SOURCE =~ /^(web)$/

fairdata-e2e-feature:
  stage: e2e-test
  trigger: fairdata/fairdata-ci
  variables:
    GITLAB_ENV: staging
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
