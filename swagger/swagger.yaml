swagger: '2.0'
info:
  title: METAX REST API
  version: v1
  description: A note about POST requests when creating objects. POST requests generally accept both individual objects or a list of objects to create from for bulk creation. The response contains the created object, or in case a list was given, a list of successfully created objects, and a list of errors for the failed ones.
host: metax.example.org
schemes:
  - https
basePath: /rest/v1/
produces:
  - application/json
paths:




# File Storage API
  /filestorages:
    get:
      summary: "list of file storage systems"
      responses:
        "200":
          description: return list of file storages
      tags:
        - File Storage API (not implemented)
    post:
      summary: create file storage system
      consumes:
        - application/json
      responses:
        '201':
          description: new file storage created, return UUID of the system
        '401':
          description: Unauthorized. Reserved for admins only
      tags:
        - File Storage API (not implemented)
  /filestorages/{PID}:
    get:
      summary: get file storage metadata
      parameters:
        - name: PID
          in: path
          description: UUID of the system
          required: true
          type: string
      responses:
        '200':
          description: return file storage metadata
        '404':
          description: not found
      tags:
        - File Storage API (not implemented)
    put:
      summary: replace File Storage metadata
      parameters:
        - name: PID
          in: path
          description: UUID of the system
          required: true
          type: string
      responses:
        '204':
          description: successful operation, no content returned
        '400':
          description: parameters contained errors, response includes details
        '401':
          description: Unauthorized. Reserved for admins only
      tags:
        - File Storage API (not implemented)
        
# File API
  /files:
    get:
      summary: get list of files, optionally filtered by request parameters
      parameters:
        - name: dataset
          in: query
          description: filter results by PID of dataset containing file
          required: false
          type: string
        - name: owner_email
          in: query
          description: filter results by owner e-mail address
          required: false
          type: string
        - name: fields
          in: query
          description: fields to return (TODO spec how a list is represented + is there a wildcard that gives all fields?)
          required: false
          type: string
          default: PID
        - name: offset
          in: query
          description: offset for paging
          required: false
          type: integer
        - name: limit
          in: query
          description: limit for paging
          required: false
          type: integer
          default: 100
      responses:
        "200":
          description: successful operation, return list of files containing PID and other file metadata
      tags:
        - File API
    post:
      summary: create multiple file metadata from array of objects
      consumes:
        - application/json
      responses:
        '201':
          description: Returns the HTTP status for each item and the PIDs of resources that were created
        '400': 
          description: Invalid list of objects
      tags:
        - File API
  /files/{PID}:
    get:
      summary: get file metadata
      parameters:
        - name: PID
          in: path
          description: Persistent ID of file OR the internal pk
          required: true
          type: string
      responses:
        '200':
          description: return file metadata
        '404':
          description: not found
      tags:
        - File API
    post:
      summary: create new file metadata
      parameters:
        - name: PID
          in: path
          description: Persistent ID of file OR the internal pk
          required: true
          type: string
      responses:
        '204':
          description: successful operation, no content returned
      tags:
        - File API
    put:
      summary: replace file metadata
      parameters:
        - name: PID
          in: path
          description: Persistent ID of file OR the internal pk
          required: true
          type: string
      responses:
        '204':
          description: successful operation, no content returned
        '400':
          description: parameters contained errors, response includes details
      tags:
        - File API
    patch:
      summary: replace part of file metadata
      parameters:
        - name: PID
          in: path
          description: Persistent ID of file OR the internal pk
          required: true
          type: string
      responses:
        '200':
          description: successful operation, full content returned
      tags:
        - File API
    delete:
      summary: delete a file
      parameters:
        - name: PID
          in: path
          description: Persistent ID of file OR the internal pk
          required: true
          type: string
      responses:
        '204':
          description: successful operation, no content returned
      tags:
        - File API
  /files/{PID}/XML:
    get:
      summary: get XML metadata from file
      parameters:
        - name: PID
          in: path
          description: Persistent ID of file OR the internal pk
          required: true
          type: string
        - name: namespace
          in: query
          description: Namespace of the schema
          required: true
          type: string
      responses:
        '200':
          description: XML returned
        '404':
          description: not found
      tags:
        - File API
    put:
      summary: replace XML metadata
      parameters:
        - name: PID
          in: path
          description: persistent ID of file OR the internal pk
          required: true
          type: string
        - name: namespace
          in: query
          description: namespace of the schema
          required: true
          type: string
      responses:
        '204':
          description: XML saved
        '400':
          description: parameters contained errors, response includes details
        '404':
          description: file does not exist
      tags:
        - File API
  /directories/{path}:
    get:
      summary: get list of PIDs in directory
      parameters:
        - name: path
          in: path
          description: directory path
          required: true
          type: string
      responses:
        '200':
          description: list of PIDs
      tags:
        - File API (not implemented)
    patch:
      summary: change directory path
      parameters:
        - name: path
          in: path
          description: current directory path
          required: true
          type: string
        - name: newpath
          in: query
          description: new directory path (TODO is it good to have this in the query? Body instead?)
          required: true
          type: string
      responses:
        '200':
          description: successful operation, full content returned
        '400':
          description: parameters contained errors, response includes details
      tags:
        - File API (not implemented)
    delete:
      summary: delete all files' metadata in directory, recursively
      parameters:
        - name: path
          in: path
          description: directory path
          required: true
          type: string
      responses:
        '204':
          description: successful operation, no content returned
      tags:
        - File API (not implemented)


# Data Catalog API
  /datacatalogs:
    get:
      summary: "list of data catalogs"
      responses:
        "200":
          description: return list of file data catalogs
      tags:
        - Data Catalog API
    post:
      summary: create new data catalog
      consumes:
        - application/json
      responses:
        '201':
          description: new data catalog created, return UUID of the catalog
        '401':
          description: Unauthorized. Reserved for admins only
      tags:
        - Data Catalog API
  /datacatalogs/{PID}:
    get:
      summary: get data catalog metadata
      parameters:
        - name: PID
          in: path
          description: UUID of the catalog
          required: true
          type: string
      responses:
        '200':
          description: return data catalog metadata
        '404':
          description: not found
      tags:
        - Data Catalog API
    put:
      summary: replace data catalog metadata
      parameters:
        - name: PID
          in: path
          description: UUID of the data catalog
          required: true
          type: string
      responses:
        '204':
          description: successful operation, no content returned
        '400':
          description: parameters contained errors, response includes details
        '401':
          description: Unauthorized. Reserved for admins only
      tags:
        - Data Catalog API







# Dataset API
  /datasets:
    # some of the parameters and returned fields are for TPAS usage only
    get:
      summary: "list datasets"
      parameters:
        - name: owner
          in: query
          description: curator identifier (field research_dataset-> curator-> identifier)
          required: false
          type: string
        - name: state
          in: query
          description: TPAS state (field preservation_state). multiple states using OR-logic are queriable in the same request, e.g. state=5,6. see valid values from http://iow.csc.fi/model/mrd/CatalogRecord/ field preservation_state
          required: false
          type: string
        - name: offset
          in: query
          description: offset for paging
          required: false
          type: integer
        - name: limit
          in: query
          description: limit for paging
          required: false
          type: integer
          default: 100
      responses:
        "200":
          description: successful operation, returns a list of datasets containing full dataset objects including their data catalog and contract information. when using query parameters, search result can be an empty list.
      tags:
        - Dataset API
    post:
      summary: create new dataset metadata
      consumes:
        - application/json
      responses:
        '201':
          description: new dataset metadata created, returns the created object, or if a list was given, a list of objects
        '400':
          description: parameters contained errors, response includes details.
      tags:
        - Dataset API
  /datasets/{PID}:
    get:
      summary: get dataset metadata
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
      responses:
        '200':
          description: return dataset metadata
        '404':
          description: not found
      tags:
        - Dataset API
    put:
      summary: replace dataset metadata
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
      responses:
        '204':
          description: successful operation, no content returned
        '400':
          description: parameters contained errors, response includes details
      tags:
        - Dataset API
    patch:
      summary: replace part of dataset metadata
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
      responses:
        '200':
          description: successful operation, full content returned
        '400':
          description: parameters contained errors, response includes details
      tags:
        - Dataset API

  /datasets/{PID}/statistics:
    get:
      summary: get statistics for dataset
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
      responses:
        '200':
          description: successful operation, return statistics (e.g. number of downloads, number of permissions asked, number of permissions granted, dissemination service used)
      tags:
        - Dataset API (not implemented)
  /datasets/{PID}/files:
    get:
      summary: get list of files in a dataset
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
      responses:
        '200':
          description: successful operation, return list of full files metadata
      tags:
        - Dataset API
  /datasets/{PID}/feedback:
    get:
      summary: get feedback (comments and ratings) for a dataset
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
        - name: offset
          in: query
          description: offset for paging
          required: false
          type: integer
        - name: limit
          in: query
          description: limit for paging
          required: false
          type: integer
          default: 100
      responses:
        '200':
          description: successful operation, return feedback objects
      tags:
        - Dataset API (not implemented)
    post:
      summary: create new feedback for dataset
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
      consumes:
        - application/json
      responses:
        '201':
          description: new feedback created, return Location with the new URL containing feedback ID
      tags:
        - Dataset API (not implemented)
  /datasets/{PID}/feedback/{ID}:
    get:
      summary: get a single feedback object for a dataset
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
        - name: ID
          in: path
          description: ID of feedback object
          required: true
          type: string
      responses:
        '200':
          description: successful operation, return feedback object
      tags:
        - Dataset API (not implemented)
  /datasets/{PID}/usage:
    get:
      summary: get usages for a dataset
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
        - name: offset
          in: query
          description: offset for paging
          required: false
          type: integer
        - name: limit
          in: query
          description: limit for paging
          required: false
          type: integer
          default: 100
      responses:
        '200':
          description: successful operation, return usage objects
      tags:
        - Dataset API (not implemented)
    post:
      summary: create new usage for dataset
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
      consumes:
        - application/json
      responses:
        '201':
          description: new usage created, return Location with the new URL containing usage ID
      tags:
        - Dataset API (not implemented)
  /datasets/{PID}/usage/{ID}:
    get:
      summary: get a single usage object for a dataset
      parameters:
        - name: PID
          in: path
          description: Persistent ID of dataset OR the internal pk
          required: true
          type: string
        - name: ID
          in: path
          description: ID of usage object
          required: true
          type: string
      responses:
        '200':
          description: successful operation, return usage object
      tags:
        - Dataset API (not implemented)


# Contract API
  /contracts:
    get:
      summary: "list contracts"
      parameters:
        - name: organization
          in: query
          description: organization ID (field contract_json-> organization-> organization_identifier)
          required: false
          type: string
        - name: offset
          in: query
          description: offset for paging
          required: false
          type: integer
        - name: limit
          in: query
          description: limit for paging
          required: false
          type: integer
      responses:
        "200":
          description: successful operation, return list of contracts
      tags:
        - Contract API
    post:
      summary: create new contract metadata
      consumes:
        - application/json
      responses:
        '201':
          description: new contract metadata created, returns the created object, or if a list was given, a list of objects
        '400':
          description: parameters contained errors, response includes details
      tags:
        - Contract API
  /contracts/{PID}:
    get:
      summary: get contract metadata
      parameters:
        - name: PID
          in: path
          description: Persistent ID of contract OR the internal pk
          required: true
          type: string
      responses:
        '200':
          description: return contract metadata
        '404':
          description: not found
      tags:
        - Contract API
    put:
      summary: replace contract metadata
      parameters:
        - name: PID
          in: path
          description: Persistent ID of contract OR the internal pk
          required: true
          type: string
      responses:
        '204':
          description: successful operation, no content returned
        '400':
          description: parameters contained errors, response includes details
      tags:
        - Contract API
    patch:
      summary: replace part of contract metadata
      parameters:
        - name: PID
          in: path
          description: Persistent ID of contract OR the internal pk
          required: true
          type: string
      responses:
        '200':
          description: successful operation, full content returned
        '400':
          description: parameters contained errors, response includes details
      tags:
        - Contract API